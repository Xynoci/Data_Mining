ggplot(ds.numeric, aes(x = temp, fill = season)) +  geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = temp, fill = season)) +  geom_density(alpha = 0.5)
View(ds.bike)
ggplot(ds.bike, aes(x = temp, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = temp, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = temp)) + geom_density()
ggplot(ds.bike, aes(x = atemp)) + geom_density()
ggplot(ds.bike, aes(x = temp, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = atemp), fill = as.factor(season)) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = atemp), fill = as.factor(season)) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = atemp, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = temp)) + geom_density()
ggplot(ds.bike, aes(x = atemp)) + geom_density()
ggplot(ds.bike, aes(x = temp, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = atemp, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = hum)) + geom_density()
ggplot(ds.bike, aes(x = hum, colour = clarity)) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = hum, colour = blue)) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = hum, colour = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = hum, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = hum)) + geom_density(alpha = 0.5) + scale_colour_hue(l=80, c=150)
ggplot(ds.bike, aes(x = hum, fill = "blue")) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = hum, fill = "red")) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = hum)) + geom_density(alpha = 0.5, fill = "red")
ggplot(ds.bike, aes(x = hum)) + geom_density(alpha = 0.5, fill = "blue")
ggplot(ds.bike, aes(x = hum)) + geom_density(alpha = 0.5, fill = "red")
ggplot(ds.bike, aes(x = windspeed)) + geom_density(alpha = 0.5, fill = "red")
ks.test(ds.bike$hum, "pnorm", mean = mean(ds.bike$hum), sd =  sqrt(var(ds.bike$hum)))
ks.test(ds.bike$hum, "two.sided", mean = mean(ds.bike$hum), sd =  sqrt(var(ds.bike$hum)))
ks.test(ds.bike$hum, "two-sided", mean = mean(ds.bike$hum), sd =  sqrt(var(ds.bike$hum)))
ks.test(ds.bike$hum, "pnorm", mean = mean(ds.bike$hum), sd =  sqrt(var(ds.bike$hum)))
head(ds.bike)
ggplot(ds.bike, aes(x = temp)) + geom_density()
ggplot(ds.bike, aes(x = atemp)) + geom_density()
summary(as.vector(ds.bike$season))
summary(as.vector(ds.bike$season))[2,4]
summary(as.vector(ds.bike$season))(2,4)
class(summary(as.vector(ds.bike$season)))
as.vector(summary(ds.bike$season))
as.vector(summary(ds.bike$season))[24]
as.vector(summary(ds.bike$season))[2,4]
as.vector(summary(ds.bike$season))[2]
as.vector(summary(ds.bike$season))[2:]
as.vector(summary(ds.bike$season))[2]
as.vector(summary(ds.bike$season))[4]
as.vector(summary(ds.bike$season))[c(2,4)]
as.vector(summary(ds.bike$season))[c(4,3,2,5)]
ds.numeric<-ds.bike[7:11]
rowName<-names(ds.numeric)
columnName<-c("Mean","Median", "1stQuartile", "3rdQuartile", "Sd.")
temp<-c(as.vector(summary(ds.numeric$temp))[c(4,3,2,5)],sd(ds.numeric$temp))
atemp<-c(as.vector(summary(ds.numeric$atemp))[c(4,3,2,5)],sd(ds.numeric$atemp))
hum<-c(as.vector(summary(ds.numeric$hum))[c(4,3,2,5)],sd(ds.numeric$hum))
windspeed<-c(as.vector(summary(ds.numeric$windspeed))[c(4,3,2,5)],sd(ds.numeric$windspeed))
cnt<-c(as.vector(summary(ds.numeric$cnt))[c(4,3,2,5)],sd(ds.numeric$cnt))
summaryTable<-matrix(c(temp,atemp,hum,windspeed,cnt))
View(summaryTable)
summaryTable<-matrix(c(temp,atemp,hum,windspeed,cnt), nrow=5, ncol=5, byrow=T, dimnames=list(rowName, columnName))
View(summaryTable)
columnName<-c("Variable Name","Mean","Median", "1stQuartile", "3rdQuartile", "Sd.")
summaryTable<-matrix(c(temp,atemp,hum,windspeed,cnt), nrow=5, ncol=5, byrow=T, dimnames=list(rowName, columnName))
View(summaryTable)
summaryTable<-matrix(c(temp,atemp,hum,windspeed,cnt), nrow=5, ncol=6, byrow=T, dimnames=list(rowName, columnName))
columnName<-c("Mean","Median", "1stQuartile", "3rdQuartile", "Sd.")
summaryTable<-matrix(c(temp,atemp,hum,windspeed,cnt), nrow=5, ncol=5, byrow=T, dimnames=list(rowName, columnName))
View(summaryTable)
summary(summaryTable)
summaryTable
ggplot(ds.bike, aes(x = temp)) + geom_density()
ggplot(ds.bike, aes(x = temp)) + geom_density() + theme_bw()
ggplot(ds.bike, aes(x = temp)) + geom_density()
ks.test(ds.bike$temp, "pnorm", mean = mean(ds.bike$temp), sd =  sqrt(var(ds.bike$temp)))
ks.test(ds.bike$atemp, "pnorm", mean = mean(ds.bike$atemp), sd =  sqrt(var(ds.bike$atemp)))
ks.test(ds.bike$windspeed, "pnorm", mean = mean(ds.bike$windspeed), sd =  sqrt(var(ds.bike$windspeed)))
ks.test(ds.bike$hum, "pnorm", mean = mean(ds.bike$hum), sd =  sqrt(var(ds.bike$hum)))
shapiro.test(ds.bike$temp)
shapiro.test(ds.bike$temp)
shapiro.test(ds.bike$atemp)
shapiro.test(ds.bike$hum)
shapiro.test(ds.bike$windspeed)
qqnorm(ds.bike$temp)
qqline(ds.bike$temp)
qqnorm(ds.bike$atemp)
qqline(ds.bike$atemp)
qqnorm(ds.bike$hum)
qqline(ds.bike$hum)
qqnorm(ds.bike$windspeed)
qqline(ds.bike$windspeed)
qqnorm(ds.bike$temp)
qqline(ds.bike$temp)
qqnorm(ds.bike$temp)
qqline(ds.bike$temp)
qqnorm(ds.bike$atemp)
qqline(ds.bike$atemp)
qqnorm(ds.bike$hum)
qqline(ds.bike$hum)
qqnorm(ds.bike$windspeed)
qqline(ds.bike$windspeed)
qqnorm(ds.bike$temp)
qqline(ds.bike$temp)
qqnorm(ds.bike$atemp)
qqline(ds.bike$atemp)
qqnorm(ds.bike$hum)
qqline(ds.bike$hum)
qqnorm(ds.bike$windspeed)
qqline(ds.bike$windspeed)
cor(ds.numeric$temp,ds.numeric$cnt)
cor(ds.numeric$temp,ds.numeric$cnt)
ggplot(ds.numeric$temp, aes(x=temp, y=cnt)) +
geom_point() +
geom_smoth(method="lm", se=FALSE)
ggplot(ds.numeric$temp, aes(x=temp, y=cnt)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot(ds.numeric$temp, aes(x=ds.numeric$temp, y=ds.numeric$cnt)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot(ds.numeric, aes(x=ds.numeric$temp, y=ds.numeric$cnt)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot(ds.bike, aes(x=ds.bike$temp, y=ds.bike$cnt, colour=as.factor(season))) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot(ds.bike, aes(x=ds.bike$temp, y=ds.bike$cnt)) +
geom_point(aes(colour=as.factor(season))) +
geom_smooth(method="lm", se=FALSE)
ggplot(ds.bike, aes(x=ds.bike$temp, y=ds.bike$cnt)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
cor(ds.numeric$atemp,ds.numeric$cnt)
ggplot(ds.bike, aes(x=ds.bike$atemp, y=ds.bike$cnt)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
cor(ds.numeric$hum,ds.numeric$cnt)
ggplot(ds.bike, aes(x=ds.bike$hum, y=ds.bike$cnt)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
cor(ds.numeric$windspeed,ds.numeric$cnt)
ggplot(ds.bike, aes(x=ds.bike$windspeed, y=ds.bike$cnt)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot(ds.bike, aes(x = ds.bike$cnt, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = ds.bike$cnt, fill = as.factor(season))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = ds.bike$cnt, fill = as.factor(yr))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = ds.bike$cnt, fill = as.factor(mnth))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = ds.bike$cnt, fill = as.factor(holiday))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = ds.bike$cnt, fill = as.factor(weekday))) + geom_density(alpha = 0.5)
ggplot(ds.bike, aes(x = ds.bike$cnt, fill = as.factor(weathersit))) + geom_density(alpha = 0.5)
shapiro.test(ds.bike$windspeed[ds.bike$holiday]=0)
shapiro.test(ds.bike$windspeed[ds.bike$holiday=0])
ds.bike$windspeed[ds.bike$holiday=0]
ds.bike$windspeed
ds.bike$windspeed[1]
View(ds.bike)
ds.bike$windspeed[ds.bike$holiday==0]
shapiro.test(ds.bike$windspeed[ds.bike$holiday==0])
shapiro.test(ds.bike$windspeed[ds.bike$holiday==0])
t.test(ds.bike$cnt~ds.bike$holiday)
lm1 = lm(cnt ~ ., data = ds.bike)
summary(lm1)
rmse = sqrt(mean(residuals(lm1)^2))
rmse
error = dim(length(ds.bike$cnt))
for (loop in 1:n) {
train1 = c(1:n)
train = train1[-loop]
m2 = lm(cnt ~ ., data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[loop] = obs - pred
}
lm1_me = mean(error)
lm1_rmse = sqrt(mean(error^2))
lm1_me
lm1_rmse
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m2 = lm(cnt ~ ., data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm1_me = mean(error)
lm1_rmse = sqrt(mean(error^2))
lm1_me
lm1_rmse
library(MASS)
stepAIC(lm1, direction = "backward")
n = length(ds.bike$cnt)
error = dim(n)
error
n
error = dim(n)
error
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m2 = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + atemp + hum + windspeed, data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm1_me = mean(error)
lm1_rmse = sqrt(mean(error^2))
lm1_me
# [1] -0.01480142
lm1_rmse
summary(lm2)
lm2 = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + atemp + hum + windspeed, data = ds.bike[train,])
summary(lm2)
anova(lm1,lm2)
lm1 = lm(cnt ~ ., data = ds.bike)
summary(lm1)
# Call:
# lm(formula = cnt ~ ., data = ds.bike)
#
# Residuals:
#     Min      1Q  Median      3Q     Max
# -56.816  -3.333   0.906   4.546  20.599
#
# Coefficients:
#             Estimate Std. Error t value Pr(>|t|)
# (Intercept)  41.4719     1.9669  21.084  < 2e-16 ***
# season        4.4050     0.4572   9.636  < 2e-16 ***
# yr           15.4152     0.5442  28.325  < 2e-16 ***
# mnth         -0.3420     0.1426  -2.398 0.016719 *
# holiday      -5.4185     1.6264  -3.332 0.000908 ***
# weekday       0.4924     0.1361   3.619 0.000317 ***
# weathersit   -5.3309     0.6528  -8.166 1.43e-15 ***
# temp          9.8789    11.7179   0.843 0.399477
# atemp        37.3619    13.2694   2.816 0.005001 **
# hum          -8.2629     2.6204  -3.153 0.001681 **
# windspeed   -21.1405     3.8084  -5.551 3.99e-08 ***
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Residual standard error: 7.284 on 720 degrees of freedom
# Multiple R-squared:  0.7893,  Adjusted R-squared:  0.7863
# F-statistic: 269.6 on 10 and 720 DF,  p-value: < 2.2e-16
rmse = sqrt(mean(residuals(lm1)^2))
rmse
# [1] 7.228763
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m2 = lm(cnt ~ ., data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm1_me = mean(error)
lm1_rmse = sqrt(mean(error^2))
lm1_me
# [1] 0.01347982
lm1_rmse
# [1] 7.474931
########################################################################################################################
# - b) Use different combination of predictors in standard linear and non-linear regression models to predict the
#      response variable. (Here we don’t consider interaction terms.) Evaluate which model performs better using
#      out-of-sample RMSE.
#      hint:: Use poly, locfit or other appropriate packages for non-linear regression models.
#      hint: Implement leave-one-out cross-validation for out-of-sample evaluation.
## backward stepwise selection
library(MASS)
stepAIC(lm1, direction = "backward")
# Start:  AIC=2913.94
# cnt ~ season + yr + mnth + holiday + weekday + weathersit + temp +
#     atemp + hum + windspeed
#
#              Df Sum of Sq   RSS    AIC
# - temp        1        38 38236 2912.7
# <none>                    38198 2913.9
# - mnth        1       305 38504 2917.8
# - atemp       1       421 38619 2919.9
# - hum         1       528 38726 2922.0
# - holiday     1       589 38787 2923.1
# - weekday     1       695 38893 2925.1
# - windspeed   1      1635 39833 2942.6
# - weathersit  1      3538 41736 2976.7
# - season      1      4926 43124 3000.6
# - yr          1     42565 80763 3459.3
#
# Step:  AIC=2912.66
# cnt ~ season + yr + mnth + holiday + weekday + weathersit + atemp +
#     hum + windspeed
#
#              Df Sum of Sq   RSS    AIC
# <none>                    38236 2912.7
# - mnth        1       304 38540 2916.5
# - hum         1       546 38782 2921.0
# - holiday     1       579 38815 2921.6
# - weekday     1       714 38950 2924.2
# - windspeed   1      1597 39833 2940.6
# - weathersit  1      3517 41753 2975.0
# - season      1      4920 43156 2999.1
# - atemp       1     36936 75172 3404.8
# - yr          1     42588 80824 3457.8
#
# Call:
# lm(formula = cnt ~ season + yr + mnth + holiday + weekday + weathersit +
#     atemp + hum + windspeed, data = ds.bike)
#
# Coefficients:
# (Intercept)       season           yr         mnth      holiday      weekday   weathersit        atemp          hum    windspeed
#     41.0455       4.4022      15.4189      -0.3415      -5.3704       0.4985      -5.3117      48.4412      -8.3898     -20.6178
lm2 = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + atemp + hum + windspeed, data = ds.bike[train,])
summary(lm2)
# Call:
# lm(formula = cnt ~ season + yr + mnth + holiday + weekday + weathersit +
#     atemp + hum + windspeed, data = ds.bike[train, ])
#
# Residuals:
#     Min      1Q  Median      3Q     Max
# -57.045  -3.375   0.910   4.492  20.486
#
# Coefficients:
#             Estimate Std. Error t value Pr(>|t|)
# (Intercept)  40.9962     1.9057  21.513  < 2e-16 ***
# season        4.4331     0.4640   9.555  < 2e-16 ***
# yr           15.4118     0.5447  28.294  < 2e-16 ***
# mnth         -0.3518     0.1450  -2.426 0.015523 *
# holiday      -5.3575     1.6263  -3.294 0.001035 **
# weekday       0.5012     0.1361   3.682 0.000248 ***
# weathersit   -5.3280     0.6540  -8.147 1.65e-15 ***
# atemp        48.4504     1.8367  26.378  < 2e-16 ***
# hum          -8.3300     2.6215  -3.178 0.001548 **
# windspeed   -20.5548     3.7624  -5.463 6.45e-08 ***
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Residual standard error: 7.287 on 720 degrees of freedom
# Multiple R-squared:  0.7889,  Adjusted R-squared:  0.7863
# F-statistic:   299 on 9 and 720 DF,  p-value: < 2.2e-16
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m2 = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + atemp + hum + windspeed, data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm2_me = mean(error)
lm2_rmse = sqrt(mean(error^2))
lm2_me
# [1] -0.01480142
lm2_rmse
# [1] 7.374793
anova(lm1,lm2)
lm2 = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + atemp + hum + windspeed, data = ds.bike)
summary(lm2)
anova(lm1,lm2)
library(car)
library(car)
install.packages("car")
library(car)
crPlots(lm2)
man poly()
help poly()
help
help()
poly1<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=0.5) + hum + windspeed)
poly1<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=0.5) + hum + windspeed, data=ds.bike)
poly1<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=2) + hum + windspeed, data=ds.bike)
lm3 = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + temp + hum + windspeed, data = ds.bike)
summary(lm3)
summary(poly1)
summary(poly2)
poly1<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=2) + hum + windspeed, data=ds.bike)
poly2<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + atmp + poly(hum, degree=2) + windspeed, data=ds.bike)
poly3<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=2) + poly(hum, degree=2) + windspeed, data=ds.bike)
summary(poly1)
summary(poly2)
poly2<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + atmp + poly(hum, degree=2) + windspeed, data=ds.bike)
poly2<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + atemp + poly(hum, degree=2) + windspeed, data=ds.bike)
summary(poly2)
summary(poly3)
poly3<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=1) + windspeed, data=ds.bike)
poly3<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=2) + poly(hum, degree=2) + windspeed, data=ds.bike)
poly4<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=1) + windspeed, data=ds.bike)
summary(poly4)
poly5<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=2) + windspeed, data=ds.bike)
summary(poly5)
poly5<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=3) + windspeed, data=ds.bike)
summary(poly5)
poly5<-lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=2) + windspeed, data=ds.bike)
summary(poly5)
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m2 = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=2) + windspeed, data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm2_me = mean(error)
lm2_rmse = sqrt(mean(error^2))
lm2_me
# [1] -0.01480142
lm2_rmse
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=1) + windspeed, data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm_me = mean(error)
lm_rmse = sqrt(mean(error^2))
lm_me
lm_rmse
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=2) + poly(hum, degree=2) + windspeed, data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm_me = mean(error)
lm_rmse = sqrt(mean(error^2))
lm_me
lm_rmse
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=2) + poly(hum, degree=2) + windspeed, data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm_me = mean(error)
lm_rmse = sqrt(mean(error^2))
lm_me
lm_rmse
n = length(ds.bike$cnt)
error = dim(n)
for (k in 1:n) {
train1 = c(1:n)
train = train1[-k]
m = lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=1) + windspeed, data = ds.bike[train,])
pred = predict(m2, newdata = ds.bike[-train,])
obs = ds.bike$cnt[-train]
error[k] = obs - pred
}
lm_me = mean(error)
lm_rmse = sqrt(mean(error^2))
lm_me
lm_rmse
cutoff<-4/(nrow(ds.bike)-length(lm2$coefficients)-2)
length(lm2$coefficients)-2
cutoff<-4/(nrow(ds.bike)-length(lm5$coefficients)-2)
cutoff<-4/(nrow(ds.bike)-length(poly5$coefficients)-2)
poly5$coefficients
plot(poly5, which = 4, cook.levels = cutoff)
abline(h=cutoff,lty=2,col="red")
fit1 <- lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=2) + windspeed)
fit2 <- lm(cnt ~ 1)
fit1 <- lm(cnt ~ season + yr + mnth + holiday + weekday + weathersit + poly(atemp, degree=3) + poly(hum, degree=2) + windspeed, data=ds.bike)
fit2 <- lm(cnt ~ 1, data=ds.bike)
stepAIC(fit2,direction="forward",scope=list(upper=fit1,lower=fit2))
summaryTable
columnName<-c("Mean","Median", "1stQuartile", "3rdQuartile", "Sd.")
temp<-c(as.vector(summary(ds.numeric$temp))[c(4,3,2,5)],sd(ds.numeric$temp))
atemp<-c(as.vector(summary(ds.numeric$atemp))[c(4,3,2,5)],sd(ds.numeric$atemp))
hum<-c(as.vector(summary(ds.numeric$hum))[c(4,3,2,5)],sd(ds.numeric$hum))
windspeed<-c(as.vector(summary(ds.numeric$windspeed))[c(4,3,2,5)],sd(ds.numeric$windspeed))
summaryTable<-matrix(c(temp,atemp,hum,windspeed,cnt), nrow=4, ncol=5, byrow=TRUE, dimnames=list(rowName, columnName))
summaryTable
temp<-c(as.vector(summary(ds.numeric$temp))[c(4,3,2,5)],sd(ds.numeric$temp))
atemp<-c(as.vector(summary(ds.numeric$atemp))[c(4,3,2,5)],sd(ds.numeric$atemp))
hum<-c(as.vector(summary(ds.numeric$hum))[c(4,3,2,5)],sd(ds.numeric$hum))
windspeed<-c(as.vector(summary(ds.numeric$windspeed))[c(4,3,2,5)],sd(ds.numeric$windspeed))
summaryTable<-matrix(c(temp,atemp,hum,windspeed), nrow=4, ncol=5, byrow=TRUE, dimnames=list(rowName, columnName))
ds.numeric<-ds.bike[7:10]
rowName<-names(ds.numeric)
columnName<-c("Mean","Median", "1stQuartile", "3rdQuartile", "Sd.")
temp<-c(as.vector(summary(ds.numeric$temp))[c(4,3,2,5)],sd(ds.numeric$temp))
atemp<-c(as.vector(summary(ds.numeric$atemp))[c(4,3,2,5)],sd(ds.numeric$atemp))
hum<-c(as.vector(summary(ds.numeric$hum))[c(4,3,2,5)],sd(ds.numeric$hum))
windspeed<-c(as.vector(summary(ds.numeric$windspeed))[c(4,3,2,5)],sd(ds.numeric$windspeed))
summaryTable<-matrix(c(temp,atemp,hum,windspeed), nrow=4, ncol=5, byrow=TRUE, dimnames=list(rowName, columnName))
summaryTable
cor(ds.numeric$hum,ds.numeric$cnt)
ggplot(ds.bike, aes(x=ds.bike$hum, y=ds.bike$cnt)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
shapiro.test(ds.bike$windspeed[ds.bike$holiday==1])
shapiro.test(ds.bike$windspeed[ds.bike$holiday==1])
ggplot(ds.bike$windspeed[ds.bike$holiday==1])+geom_density()
ggplot(data.frame(ds.bike$windspeed[ds.bike$holiday==1]))+geom_density()
data.frame(ds.bike$windspeed[ds.bike$holiday==1])
summary(ds.bike$windspeed[ds.bike$holiday==0])
length(ds.bike$windspeed[ds.bike$holiday==0])
length(ds.bike$windspeed[ds.bike$holiday==1])
